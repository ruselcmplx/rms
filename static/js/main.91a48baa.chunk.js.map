{"version":3,"sources":["Video.js","Menu.js","Main.js","About.js","App.js","serviceWorker.js","index.js"],"names":["Video","react_default","a","createElement","className","autoPlay","muted","playsInline","loop","id","src","type","href","Component","Menu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","opened","setState","handleMenuClick","handleMenuItemClick","menuClass","ref","onClick","bind","width","height","viewBox","fill","y","Main","About","App","active","activeArea","src_Main_0","src_About","alt","src_Menu_0","src_Video_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.91a48baa.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Video.css';\r\n\r\nclass Video extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Video\">\r\n        <video autoPlay muted playsInline loop id=\"rms\">\r\n          <source src=\"./video/RMS.mp4\" type=\"video/mp4\"/>\r\n          <p>Your browser doesn't support HTML5 video. Here is\r\n            a <a href=\"./video/RMS.mp4\">link to the video</a> instead.</p>\r\n        </video>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Video;\r\n","import React, { Component } from 'react';\r\nimport './Menu.css';\r\n\r\nclass Menu extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         opened: false\r\n      }\r\n   }\r\n\r\n   handleMenuClick() {\r\n      this.setState({\r\n         opened: !this.state.opened\r\n      });\r\n   }\r\n\r\n   handleMenuItemClick(id) {\r\n      this.handleMenuClick();\r\n      this.props.handleMenuItemClick(id);\r\n   }\r\n\r\n   render() {\r\n      const isOpened = this.state.opened ? 'Menu_opened' : '';\r\n      const menuClass = 'Menu ' + isOpened;\r\n      return (\r\n         <div className={menuClass} ref=\"menu\">\r\n            <div className=\"MenuButton\" onClick={this.handleMenuClick.bind(this)}>\r\n               <svg width=\"40\" height=\"30\" viewBox=\"0 0 40 30\" fill=\"none\">\r\n                  <rect y=\"20\" width=\"40\" height=\"10\" fill=\"white\"/>\r\n                  <rect width=\"40\" height=\"10\" fill=\"white\"/>\r\n               </svg>\r\n            </div>\r\n            <div className=\"MenuItems\">\r\n               <ul>\r\n                  <li onClick={this.handleMenuItemClick.bind(this, 1)}>Аренда</li>\r\n                  <li onClick={this.handleMenuItemClick.bind(this, 2)}>Услуги</li>\r\n                  <li onClick={this.handleMenuItemClick.bind(this, 3)}>Проекты</li>\r\n                  <li onClick={this.handleMenuItemClick.bind(this, 4)}>О нас</li>\r\n               </ul>\r\n               <div className='MenuInfo'>\r\n                  <span>hello@rms.group</span>\r\n                  <span>+7 987 231-77-46</span>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from 'react';\r\nimport './Main.css';\r\n\r\nclass Main extends Component {\r\n   render() {\r\n      return (\r\n         <div className=\"Main\">\r\n            <div className=\"Text\">\r\n               <h1>Сначала выступим мы.</h1>\r\n               <p>Сдаём в аренду светодиодные экраны, съёмочную технику, организуем техническое обеспечение мероприятий и проводим трансляции</p>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\nimport './css/About.css';\n\nclass About extends Component {\n   render() {\n      return (\n         <div className=\"About\">\n            <div className=\"Text\">\n               <p>Мы занимаемся техническим обеспечением и сопровождением мероприятий. Rent Media Systems 14 лет выступает в качестве подрядчика на больших событиях: государственных советах, коллегиях министерств, дебатах, конференциях, круглых столах, концертных шоу.</p>\n               <p>В нашем распоряжении — огромная техническая база, которая позволяет выполнить любые, порой кажущиеся невыполнимыми задачи. Все оборудование проходит регулярное обслуживание и используется только лучшими профессионалами индустрии, которых мы по крупицам собирали со всей страны.</p>\n               <p>Наша команда — это люди, зарекомендовавшие себя как образцовые работники, которые всегда думают о решении задач заказчика и качественном техническом воплощении задач. Доказательство этому — работа на лучших отечественных и зарубежных проектах и самое главное — отсутствие форс-мажоров.</p>\n            </div>\n         </div>\n      )\n   }\n}\n\nexport default About;","import React, { Component } from 'react';\nimport Video from './Video';\nimport Menu from './Menu';\nimport Main from './Main';\nimport About from './About';\nimport './App.css';\n\nclass App extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         active: 0\n      }\n   }\n   handleMenuItemClick(id) {\n      this.setState({\n         active: id\n      });\n   }\n\n   render() {\n      const active = this.state.active;\n      let activeArea;\n      switch (active) {\n         case 0:\n            activeArea = <Main />;\n            break;\n         case 4:\n            activeArea = <About />\n            break;\n         default:\n            activeArea = <Main />;\n            break;\n      }\n\n      return (\n         <div className=\"App\">\n            <div className=\"Logo\">\n               <img alt=\"\" src=\"./img/Group.svg\" />\n            </div>\n            <Menu handleMenuItemClick={this.handleMenuItemClick.bind(this)} />\n            <div className=\"ActiveArea\">\n               { activeArea }\n            </div>\n            <Video />\n         </div>\n      );\n   }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}